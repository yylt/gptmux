/*
 * OpenAI（ChatGPT）
 *
 * Open AI（ChatGPT）几乎可以应用于任何涉及理解或生成自然语言或代码的任务。我们提供一系列具有不同功率级别的模型，适用于不同的任务，并且能够微调您自己的自定义模型。这些模型可用于从内容生成到语义搜索和分类的所有领域。
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"

	"github.com/gin-gonic/gin"
)

// Route is the information for every URI.
type Route struct {
	// Name is the name of this Route.
	Name string
	// Method is the string for the HTTP method. ex) GET, POST etc..
	Method string
	// Pattern is the pattern of the URI.
	Pattern string
	// HandlerFunc is the handler function of this route.
	HandlerFunc gin.HandlerFunc
}

// NewRouter returns a new router.
func NewRouter(handleFunctions ApiHandleFunctions) *gin.Engine {
	return NewRouterWithGinEngine(gin.Default(), handleFunctions)
}

// NewRouter add routes to existing gin engine.
func NewRouterWithGinEngine(router *gin.Engine, handleFunctions ApiHandleFunctions) *gin.Engine {
	for _, route := range getRoutes(handleFunctions) {
		if route.HandlerFunc == nil {
			route.HandlerFunc = DefaultHandleFunc
		}
		switch route.Method {
		case http.MethodGet:
			router.GET(route.Pattern, route.HandlerFunc)
		case http.MethodPost:
			router.POST(route.Pattern, route.HandlerFunc)
		case http.MethodPut:
			router.PUT(route.Pattern, route.HandlerFunc)
		case http.MethodPatch:
			router.PATCH(route.Pattern, route.HandlerFunc)
		case http.MethodDelete:
			router.DELETE(route.Pattern, route.HandlerFunc)
		}
	}

	return router
}

// Default handler for not yet implemented routes
func DefaultHandleFunc(c *gin.Context) {
	c.String(http.StatusNotImplemented, "501 not implemented")
}

type ApiHandleFunctions struct {

	// Routes for the AssistantsBetaAPI part of the API
	AssistantsBetaAPI AssistantsBetaAPI
	// Routes for the AudioAPI part of the API
	AudioAPI AudioAPI
	// Routes for the ChatAPI part of the API
	ChatAPI ChatAPI
	// Routes for the CompletionsAPI part of the API
	CompletionsAPI CompletionsAPI
	// Routes for the EmbeddingsAPI part of the API
	EmbeddingsAPI EmbeddingsAPI
	// Routes for the FilesAPI part of the API
	FilesAPI FilesAPI
	// Routes for the FineTuningAPI part of the API
	FineTuningAPI FineTuningAPI
	// Routes for the ImagesAPI part of the API
	ImagesAPI ImagesAPI
	// Routes for the MessagesAPI part of the API
	MessagesAPI MessagesAPI
	// Routes for the ModelsAPI part of the API
	ModelsAPI ModelsAPI
	// Routes for the ModerationsAPI part of the API
	ModerationsAPI ModerationsAPI
	// Routes for the RunsAPI part of the API
	RunsAPI RunsAPI
	// Routes for the ThreadsAPI part of the API
	ThreadsAPI ThreadsAPI
}

func getRoutes(handleFunctions ApiHandleFunctions) []Route {
	return []Route{
		{
			"V1ChatCompletionsPost",
			http.MethodPost,
			"/v1/chat/completions",
			handleFunctions.ChatAPI.V1ChatCompletionsPost,
		},
		{
			"V1ModelsGet",
			http.MethodGet,
			"/v1/models",
			handleFunctions.ModelsAPI.V1ModelsGet,
		},
		{
			"V1ModelsModelGet",
			http.MethodGet,
			"/v1/models/:model",
			handleFunctions.ModelsAPI.V1ModelsModelGet,
		},
	}
}
