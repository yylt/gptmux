/*
 * OpenAI（ChatGPT）
 *
 * Open AI（ChatGPT）几乎可以应用于任何涉及理解或生成自然语言或代码的任务。我们提供一系列具有不同功率级别的模型，适用于不同的任务，并且能够微调您自己的自定义模型。这些模型可用于从内容生成到语义搜索和分类的所有领域。  
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"

	"github.com/gin-gonic/gin"
)

// Route is the information for every URI.
type Route struct {
	// Name is the name of this Route.
	Name		string
	// Method is the string for the HTTP method. ex) GET, POST etc..
	Method		string
	// Pattern is the pattern of the URI.
	Pattern	 	string
	// HandlerFunc is the handler function of this route.
	HandlerFunc	gin.HandlerFunc
}

// NewRouter returns a new router.
func NewRouter(handleFunctions ApiHandleFunctions) *gin.Engine {
	return NewRouterWithGinEngine(gin.Default(), handleFunctions)
}

// NewRouter add routes to existing gin engine.
func NewRouterWithGinEngine(router *gin.Engine, handleFunctions ApiHandleFunctions) *gin.Engine {
	for _, route := range getRoutes(handleFunctions) {
		if route.HandlerFunc == nil {
			route.HandlerFunc = DefaultHandleFunc
		}
		switch route.Method {
		case http.MethodGet:
			router.GET(route.Pattern, route.HandlerFunc)
		case http.MethodPost:
			router.POST(route.Pattern, route.HandlerFunc)
		case http.MethodPut:
			router.PUT(route.Pattern, route.HandlerFunc)
		case http.MethodPatch:
			router.PATCH(route.Pattern, route.HandlerFunc)
		case http.MethodDelete:
			router.DELETE(route.Pattern, route.HandlerFunc)
		}
	}

	return router
}

// Default handler for not yet implemented routes
func DefaultHandleFunc(c *gin.Context) {
	c.String(http.StatusNotImplemented, "501 not implemented")
}

type ApiHandleFunctions struct {

	// Routes for the AssistantsBetaAPI part of the API
	AssistantsBetaAPI AssistantsBetaAPI
	// Routes for the AudioAPI part of the API
	AudioAPI AudioAPI
	// Routes for the ChatAPI part of the API
	ChatAPI ChatAPI
	// Routes for the CompletionsAPI part of the API
	CompletionsAPI CompletionsAPI
	// Routes for the EmbeddingsAPI part of the API
	EmbeddingsAPI EmbeddingsAPI
	// Routes for the FilesAPI part of the API
	FilesAPI FilesAPI
	// Routes for the FineTuningAPI part of the API
	FineTuningAPI FineTuningAPI
	// Routes for the ImagesAPI part of the API
	ImagesAPI ImagesAPI
	// Routes for the MessagesAPI part of the API
	MessagesAPI MessagesAPI
	// Routes for the ModelsAPI part of the API
	ModelsAPI ModelsAPI
	// Routes for the ModerationsAPI part of the API
	ModerationsAPI ModerationsAPI
	// Routes for the RunsAPI part of the API
	RunsAPI RunsAPI
	// Routes for the ThreadsAPI part of the API
	ThreadsAPI ThreadsAPI
}

func getRoutes(handleFunctions ApiHandleFunctions) []Route {
	return []Route{ 
		{
			"V1AssistantsAssistantIdDelete",
			http.MethodDelete,
			"/v1/assistants/:assistant_id ",
			handleFunctions.AssistantsBetaAPI.V1AssistantsAssistantIdDelete,
		},
		{
			"V1AssistantsAssistantIdFilesFileIdDelete",
			http.MethodDelete,
			"/v1/assistants/:assistant_id/files/:file_id ",
			handleFunctions.AssistantsBetaAPI.V1AssistantsAssistantIdFilesFileIdDelete,
		},
		{
			"V1AssistantsAssistantIdFilesFileIdGet",
			http.MethodGet,
			"/v1/assistants/:assistant_id/files/:file_id ",
			handleFunctions.AssistantsBetaAPI.V1AssistantsAssistantIdFilesFileIdGet,
		},
		{
			"V1AssistantsAssistantIdFilesGet",
			http.MethodGet,
			"/v1/assistants/:assistant_id/files",
			handleFunctions.AssistantsBetaAPI.V1AssistantsAssistantIdFilesGet,
		},
		{
			"V1AssistantsAssistantIdFilesPost",
			http.MethodPost,
			"/v1/assistants/:assistant_id/files",
			handleFunctions.AssistantsBetaAPI.V1AssistantsAssistantIdFilesPost,
		},
		{
			"V1AssistantsAssistantIdGet",
			http.MethodGet,
			"/v1/assistants/:assistant_id",
			handleFunctions.AssistantsBetaAPI.V1AssistantsAssistantIdGet,
		},
		{
			"V1AssistantsAssistantIdPost",
			http.MethodPost,
			"/v1/assistants/:assistant_id ",
			handleFunctions.AssistantsBetaAPI.V1AssistantsAssistantIdPost,
		},
		{
			"V1AssistantsGet",
			http.MethodGet,
			"/v1/assistants",
			handleFunctions.AssistantsBetaAPI.V1AssistantsGet,
		},
		{
			"V1AssistantsPost",
			http.MethodPost,
			"/v1/assistants",
			handleFunctions.AssistantsBetaAPI.V1AssistantsPost,
		},
		{
			"V1AudioSpeechGet",
			http.MethodGet,
			"/v1/audio/speech",
			handleFunctions.AudioAPI.V1AudioSpeechGet,
		},
		{
			"V1AudioTranscriptionsGet",
			http.MethodGet,
			"/v1/audio/transcriptions",
			handleFunctions.AudioAPI.V1AudioTranscriptionsGet,
		},
		{
			"V1AudioTranscriptionsPost",
			http.MethodPost,
			"/v1/audio/transcriptions",
			handleFunctions.AudioAPI.V1AudioTranscriptionsPost,
		},
		{
			"V1AudioTranslationsGet",
			http.MethodGet,
			"/v1/audio/translations",
			handleFunctions.AudioAPI.V1AudioTranslationsGet,
		},
		{
			"V1AudioTranslationsPost",
			http.MethodPost,
			"/v1/audio/translations",
			handleFunctions.AudioAPI.V1AudioTranslationsPost,
		},
		{
			"V1ChatCompletionsPost",
			http.MethodPost,
			"/v1/chat/completions",
			handleFunctions.ChatAPI.V1ChatCompletionsPost,
		},
		{
			"V1CompletionsPost",
			http.MethodPost,
			"/v1/completions",
			handleFunctions.CompletionsAPI.V1CompletionsPost,
		},
		{
			"V1EmbeddingsPost",
			http.MethodPost,
			"/v1/embeddings",
			handleFunctions.EmbeddingsAPI.V1EmbeddingsPost,
		},
		{
			"V1FilesFileIdContentGet",
			http.MethodGet,
			"/v1/files/:file_id/content",
			handleFunctions.FilesAPI.V1FilesFileIdContentGet,
		},
		{
			"V1FilesFileIdDelete",
			http.MethodDelete,
			"/v1/files/:file_id",
			handleFunctions.FilesAPI.V1FilesFileIdDelete,
		},
		{
			"V1FilesFileIdGet",
			http.MethodGet,
			"/v1/files/:file_id",
			handleFunctions.FilesAPI.V1FilesFileIdGet,
		},
		{
			"V1FilesGet",
			http.MethodGet,
			"/v1/files _",
			handleFunctions.FilesAPI.V1FilesGet,
		},
		{
			"V1FilesPost",
			http.MethodPost,
			"/v1/files",
			handleFunctions.FilesAPI.V1FilesPost,
		},
		{
			"V1FineTuningJobsFineTuningJobIdCancelPost",
			http.MethodPost,
			"/v1/fine_tuning/jobs/:fine_tuning_job_id/cancel",
			handleFunctions.FineTuningAPI.V1FineTuningJobsFineTuningJobIdCancelPost,
		},
		{
			"V1FineTuningJobsFineTuningJobIdEventsGet",
			http.MethodGet,
			"/v1/fine_tuning/jobs/:fine_tuning_job_id/events",
			handleFunctions.FineTuningAPI.V1FineTuningJobsFineTuningJobIdEventsGet,
		},
		{
			"V1FineTuningJobsFineTuningJobIdGet",
			http.MethodGet,
			"/v1/fine_tuning/jobs/:fine_tuning_job_id",
			handleFunctions.FineTuningAPI.V1FineTuningJobsFineTuningJobIdGet,
		},
		{
			"V1FineTuningJobsGet",
			http.MethodGet,
			"/v1/fine_tuning/jobs",
			handleFunctions.FineTuningAPI.V1FineTuningJobsGet,
		},
		{
			"V1FineTuningJobsPost",
			http.MethodPost,
			"/v1/fine_tuning/jobs",
			handleFunctions.FineTuningAPI.V1FineTuningJobsPost,
		},
		{
			"V1ImagesEditsPost",
			http.MethodPost,
			"/v1/images/edits",
			handleFunctions.ImagesAPI.V1ImagesEditsPost,
		},
		{
			"V1ImagesGenerationsPost",
			http.MethodPost,
			"/v1/images/generations",
			handleFunctions.ImagesAPI.V1ImagesGenerationsPost,
		},
		{
			"V1ImagesVariationsPost",
			http.MethodPost,
			"/v1/images/variations",
			handleFunctions.ImagesAPI.V1ImagesVariationsPost,
		},
		{
			"V1ThreadsThreadIdMessagesGet",
			http.MethodGet,
			"/v1/threads/:thread_id/messages",
			handleFunctions.MessagesAPI.V1ThreadsThreadIdMessagesGet,
		},
		{
			"V1ThreadsThreadIdMessagesMessageIdFilesFileIdGet",
			http.MethodGet,
			"/v1 /threads/:thread_id/messages/:message_id/files/:file_id",
			handleFunctions.MessagesAPI.V1ThreadsThreadIdMessagesMessageIdFilesFileIdGet,
		},
		{
			"V1ThreadsThreadIdMessagesMessageIdFilesGet",
			http.MethodGet,
			"/v1/threads/:thread_id/messages/:message_id/files _",
			handleFunctions.MessagesAPI.V1ThreadsThreadIdMessagesMessageIdFilesGet,
		},
		{
			"V1ThreadsThreadIdMessagesMessageIdGet",
			http.MethodGet,
			"/v1/threads/:thread_id/messages/:message_id ",
			handleFunctions.MessagesAPI.V1ThreadsThreadIdMessagesMessageIdGet,
		},
		{
			"V1ThreadsThreadIdMessagesMessageIdPost",
			http.MethodPost,
			"/v1/threads/:thread_id/messages/:message_id ",
			handleFunctions.MessagesAPI.V1ThreadsThreadIdMessagesMessageIdPost,
		},
		{
			"V1ThreadsThreadIdMessagesPost",
			http.MethodPost,
			"/v1/threads/:thread_id/messages",
			handleFunctions.MessagesAPI.V1ThreadsThreadIdMessagesPost,
		},
		{
			"V1ModelsGet",
			http.MethodGet,
			"/v1/models",
			handleFunctions.ModelsAPI.V1ModelsGet,
		},
		{
			"V1ModelsModelGet",
			http.MethodGet,
			"/v1/models/:model",
			handleFunctions.ModelsAPI.V1ModelsModelGet,
		},
		{
			"V1ModelsModelidGet",
			http.MethodGet,
			"/v1/models/:modelid",
			handleFunctions.ModelsAPI.V1ModelsModelidGet,
		},
		{
			"V1ModerationsPost",
			http.MethodPost,
			"/v1/moderations",
			handleFunctions.ModerationsAPI.V1ModerationsPost,
		},
		{
			"V1ThreadsRunsPost",
			http.MethodPost,
			"/v1/threads/runs",
			handleFunctions.RunsAPI.V1ThreadsRunsPost,
		},
		{
			"V1ThreadsThreadIdRunsGet",
			http.MethodGet,
			"/v1/threads/:thread_id/runs",
			handleFunctions.RunsAPI.V1ThreadsThreadIdRunsGet,
		},
		{
			"V1ThreadsThreadIdRunsPost",
			http.MethodPost,
			"/v1/threads/:thread_id/runs",
			handleFunctions.RunsAPI.V1ThreadsThreadIdRunsPost,
		},
		{
			"V1ThreadsThreadIdRunsRunIdCancelPost",
			http.MethodPost,
			"/v1/threads/:thread_id/runs/:run_id/cancel",
			handleFunctions.RunsAPI.V1ThreadsThreadIdRunsRunIdCancelPost,
		},
		{
			"V1ThreadsThreadIdRunsRunIdGet",
			http.MethodGet,
			"/v1/threads/:thread_id/runs/:run_id ",
			handleFunctions.RunsAPI.V1ThreadsThreadIdRunsRunIdGet,
		},
		{
			"V1ThreadsThreadIdRunsRunIdStepsGet",
			http.MethodGet,
			"/v1/threads/:thread_id/runs/:run_id/steps",
			handleFunctions.RunsAPI.V1ThreadsThreadIdRunsRunIdStepsGet,
		},
		{
			"V1ThreadsThreadIdRunsRunIdStepsStepIdGet",
			http.MethodGet,
			"/v1 /threads/:thread_id/runs/:run_id/steps/:step_id",
			handleFunctions.RunsAPI.V1ThreadsThreadIdRunsRunIdStepsStepIdGet,
		},
		{
			"V1ThreadsThreadIdRunsRunIdSubmitToolOutputsPost",
			http.MethodPost,
			"/v1/threads/:thread_id/runs/:run_id/submit_tool_outputs",
			handleFunctions.RunsAPI.V1ThreadsThreadIdRunsRunIdSubmitToolOutputsPost,
		},
		{
			"V1ThreadsPost",
			http.MethodPost,
			"/v1/threads",
			handleFunctions.ThreadsAPI.V1ThreadsPost,
		},
		{
			"V1ThreadsThreadIdDelete",
			http.MethodDelete,
			"/v1/threads/:thread_id ",
			handleFunctions.ThreadsAPI.V1ThreadsThreadIdDelete,
		},
		{
			"V1ThreadsThreadIdPost",
			http.MethodPost,
			"/v1/threads/:thread_id ",
			handleFunctions.ThreadsAPI.V1ThreadsThreadIdPost,
		},
	}
}
