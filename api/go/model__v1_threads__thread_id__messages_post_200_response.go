/*
 * OpenAI（ChatGPT）
 *
 * Open AI（ChatGPT）几乎可以应用于任何涉及理解或生成自然语言或代码的任务。我们提供一系列具有不同功率级别的模型，适用于不同的任务，并且能够微调您自己的自定义模型。这些模型可用于从内容生成到语义搜索和分类的所有领域。  
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type V1ThreadsThreadIdMessagesPost200Response struct {

	// 标识符，可以在 API 端点中引用。
	Id string `json:"id"`

	// 对象类型，始终为`thread.message`。
	Object string `json:"object"`

	// 创建消息时的 Unix 时间戳（以秒为单位）。
	CreatedAt int32 `json:"created_at"`

	// 该消息所属的线程ID 。
	ThreadId string `json:"thread_id"`

	// 产生消息的实体。`user`或之一`assistant`。
	Role string `json:"role"`

	// 文本和/或图像数组中的消息内容。
	Content []V1ThreadsThreadIdMessagesPost200ResponseContentInner `json:"content"`

	// 助手应使用的[文件](https://platform.openai.com/docs/api-reference/files)ID列表。对于可访问文件的检索和 code_interpreter 等工具很有用。一条消息最多可以附加 10 个文件。
	FileIds []string `json:"file_ids"`

	// 一组可附加到对象的 16 个键值对。这对于以结构化格式存储有关对象的附加信息非常有用。键的最大长度为 64 个字符，值的最大长度为 512 个字符。
	Metadata map[string]interface{} `json:"metadata"`
}
